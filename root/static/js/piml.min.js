/* The PI Markup Language v0.2.0 by Kai MÃ¶rker */
function escapeHTMLEntities(e){return e.replace(/&/g,"&amp;").replace(/>/g,"&gt;").replace(/</g,"&lt;")}function escapePIMLEntities(e){return e.replace(/\\\*/g,"&ast;").replace(/\\_/g,"&lowbar;").replace(/\\\//g,"&sol;").replace(/\\`/g,"&grave;").replace(/\\\[/g,"&lsqb;").replace(/\\\]/g,"&rsqb;").replace(/\\\|/g,"&verbar;")}function parseColor(e){let r=new RegExp("\\[(.*?)\\|color=(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|purple|red|silver|teal|white|yellow|#[A-Fa-f0-9]{6})\\]","g");for(let a of e.matchAll(r)){let r=a[0],t=a[1],l=a[2];e=e.replace(r,`<span style="color: ${l};">${t}</span>`)}return e}function replacePairOfStringWithHTML(e,r,a){let t=new RegExp(`\\${r}(.*?)\\${r}`,"gs");for(let r of e.matchAll(t)){let t=r[0],l=r[1];e=e.replace(`${t}`,`<${a}>${l}</${a}>`)}return e}function parse(e){let r;return r=parseColor(r=replacePairOfStringWithHTML(r=replacePairOfStringWithHTML(r=replacePairOfStringWithHTML(r=replacePairOfStringWithHTML(r=replacePairOfStringWithHTML(r=escapePIMLEntities(r=escapeHTMLEntities(e)),"/","i"),"_","u"),"*","b"),"```","pre"),"`","tt"))}export default{parse:parse};